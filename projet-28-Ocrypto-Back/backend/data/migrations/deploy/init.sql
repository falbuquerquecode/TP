-- Deploy ocrypto:init to pg

BEGIN;


CREATE TABLE "user" (
    id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    pseudo varchar(20) NOT NULL,      
    email text NOT NULL UNIQUE,
    password text NOT NULL,    
    level text NOT NULL DEFAULT 'novice',
    reward int NOT NULL DEFAULT 0,
    image text NOT NULL DEFAULT 'unknown',
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT now(),
    "delete_at" TIMESTAMPTZ 
);


CREATE TABLE article (
    id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name text NOT NULL UNIQUE,
    author text NOT NULL DEFAULT 'unknown',
    abstract text NOT NULL,
    image text NOT NULL DEFAULT 'unknown',
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    delete_at TIMESTAMPTZ 
);

CREATE TABLE challenge (
    name text NOT NULL UNIQUE,
    level_id integer NOT NULL,    
    abstract text NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    delete_at TIMESTAMPTZ 
);


CREATE TABLE lexicon (
    letter text NOT NULL,
    name text NOT NULL UNIQUE,
    abstract text NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    delete_at TIMESTAMPTZ 
);

CREATE TABLE "level" (
    id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name text NOT NULL UNIQUE,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    delete_at TIMESTAMPTZ 
);

CREATE TABLE question (
    id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    description text NOT NULL,
    reward int NOT NULL DEFAULT 30,
    answer_id integer,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    delete_at TIMESTAMPTZ 
);

CREATE TABLE answer (
    id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description text NOT NULL,
    question_id integer NOT NULL,
    created_at timestamptz NOT NULL DEFAULT now(),
    delete_at timestamptz
);

CREATE TABLE favoris (
    user_id int NOT NULL,
    cryptoId text NOT NULL,
    created_at timestamptz NOT NULL DEFAULT now(),
    delete_at timestamptz     
);

ALTER TABLE answer
ADD FOREIGN KEY (question_id) REFERENCES question(id);

ALTER TABLE challenge
ADD FOREIGN KEY (level_id) REFERENCES level(id);

ALTER TABLE favoris
ADD FOREIGN KEY (user_id) REFERENCES "user"(id);

ALTER TABLE question
ADD FOREIGN KEY (answer_id) REFERENCES answer(id);



COMMIT;
